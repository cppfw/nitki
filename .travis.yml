sudo: required

services:
- docker

language: cpp
dist: xenial
os: linux

addons:
  apt:
    sources:
      - sourceline: 'deb http://dl.bintray.com/igagis/ubuntu xenial main'
        key_url: 'http://keyserver.ubuntu.com/pks/lookup?op=get&search=0x379CE192D401AB61'
    update: true
    packages:
    - binfmt-support
    - qemu-user-static
    - myci

matrix:
  include:
    - name: macosx
      os: osx
      compiler: clang
      osx_image: xcode11
    - name: ios
      os: osx
      compiler: clang
      osx_image: xcode11
    - name: android
      language: android
      android:
        components:
          - platform-tools
          - tools
          - build-tools-28.0.3
          - android-28
#          - sys-img-armeabi-v7a-android-22
          - extra-android-m2repository

env:
  global:
  # Encrypted MYCI_BINTRAY_API_KEY for publishing to bintray.
  - secure: "UG6yPPXj0IFZxQgVt1JjcT0Wk2Yz/qChQqC52Y1IQsZiH7Wd3fz46/02pQXgEBMBZSW+ju8WJ7YqRRXrshnQZy/28Q3S2RndA7amNjX64H3cY6o9TDK8VnHUwbwOLaA70lIfNhJQrw05sBIw8OXNjAsAAq2FKEWv2kVK8H2flSs2ao9nVQmhPZfeQlpQQibrfU7AHAtVnlJTtCI310IA9fF+bEtnU2rNOzltflb0m4uY/QtCNWj8ZxBmgnD1H19+wuZIt6ZQfsYHg9hG9cBSQLVQNGvyUidTPGxSnk46jXyR+pa5nAJrp/RqqvT+GYkO3lq6AI/f60BcJcgYSyoBRjVFKR0NDMXrp+IN+9b8Xl1+m47XBsZWiWFDn94wboSWzX+oxaKd0DsqhTPKk5/KKnbRRB0+yWb9H1pCGszN1Lbgcze1kePJyyTYVJBPkJUOkfb4LPjIJOLMlfSaC0uHEG/uGYXLeHv1LEIz1xIWQyervtO4CDweI+wAXHqJuXyIlcuJh2s7Fvg2LLYNTKCgF00otveao0WqpnP7sPNLfyDk+U6dRpqDV5lGYecPzk1HQGlrKw/3K3JcDSG17lpFjcVGEtGjgNQPVdt9x8utN8dK89ceF9vjrwEJMc+lx6VnOcXDF+1+Dc10m1hsuTMmIeLwzE5OnEulr4ma4kpKaQc="
  # Encrypted MYCI_GIT_ACCESS_TOKEN for publishing to homebrew-tap.
  - secure: "R9+89V8MdV6D8BZkLZ2ctwhggMDAK1SvyTWq+p9ZnYbgLDlOyUDH2C9SyIBE1tgQx9sd8pV8oV/G+Ymho7W476pU3cF5YhcFGB0pg7t/y9cZpnsWRYlpLebybKiKPv5D9Kl9vhEzKA8xvGf02bdlF743k/tJqgtqHRNQFItddl6eDcaEW4CVTunrJjh23oq28yuXahf+JdIEDhwxuERsqOg4q0LqCE4/IwvRk83ndbtutnoPpinPuqBiKbuP0nKCKW/gMQRkh/gz0pxUV8bevfJ4RucsAf+JUfEftu6UnjXBpw5EQyKWWI2gRvbB4TaO58g2WvSnD1XDptMiccImdtYQoU8cH2HVgJEZwk16mk0mBgaus8MP8y6dZkg6n7aBAiNso8kgA/TMqNhr+SthHQJYmkVMyHN2eQ6vPcRtuoyEycD9pG6xDLZIIbQFI1jksoWAoSF4pdsoHjZH/e8965sPoGloHX7CapjNWc7lh0MoTy1PPE5390L3mna4d9G0gERE3ZmTtNhQW6pFbb1U5pkdu3rOsLhSaf6+lSoOjMKkvg3Tt69UznuLQPkMsxjLYLwesEwO0sRYiyoSeYNaMHvkozDY8goPUZ+Ic5UET0DSPcHO8dRsbbXwDx/PQ1jTStYO7K08RyhIE0VQZaI1BS7NGF0d9/eJwAFy5wczeNU="
  - MYCI_GIT_USERNAME=igagis
  - PACKAGE_NAME=nitki
  - PACKAGE_VERSION=$(myci-deb-version.sh debian/changelog)
  matrix:
  - OS_REL=xenial OS=ubuntu DOCKER_IMAGE=$OS:$OS_REL PACKAGE_TYPE=deb
  - OS_REL=bionic OS=ubuntu DOCKER_IMAGE=$OS:$OS_REL PACKAGE_TYPE=deb
  - OS_REL=stretch OS=debian DOCKER_IMAGE=$OS:$OS_REL PACKAGE_TYPE=deb
  - OS_REL=stretch OS=raspbian DOCKER_IMAGE=igagis/$OS:$OS_REL PACKAGE_TYPE=deb


before_install:
- if [ "$TRAVIS_OS_NAME" == "linux" ] && [ -z "$TRAVIS_JOB_NAME" ]; then
    docker run --name ccc -v $TRAVIS_BUILD_DIR/..:/build -w /build/$(basename $TRAVIS_BUILD_DIR) -it -d $DOCKER_IMAGE bash &&
    if [ "$PACKAGE_TYPE" == "deb" ]; then
      docker exec ccc apt update &&
      docker exec ccc apt install -y dirmngr &&
      docker exec ccc bash -c "echo 'deb http://dl.bintray.com/igagis/$OS $OS_REL main' > /etc/apt/sources.list.d/igagis.list" &&
      docker exec ccc apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 379CE192D401AB61 &&
      docker exec ccc apt update &&
      docker exec ccc apt install -y devscripts equivs myci &&
      myci-deb-prepare.sh;
    fi;
  fi
- if [ "$TRAVIS_JOB_NAME" == "macosx" ]; then
    rvm install ruby-2.3.3 &&
    rvm use ruby-2.3.3 &&

    brew update > /dev/null &&
    brew tap igagis/tap &&
    brew update > /dev/null &&
    brew install myci prorab prorab-extra libutki libpogodi;
  fi
- if [ "$TRAVIS_JOB_NAME" == "ios" ]; then
    rvm install ruby-2.3.3 &&
    rvm use ruby-2.3.3 &&

    brew update > /dev/null &&
    brew tap igagis/tap &&
    brew update > /dev/null &&
    brew install myci &&

    sudo gem install cocoapods &&
    pod repo add --silent igagis https://$MYCI_GIT_USERNAME:$MYCI_GIT_ACCESS_TOKEN@github.com/igagis/cocoapods-repo.git &&
    pod install --project-directory=xcode;
  fi

install:
- if [ "$TRAVIS_OS_NAME" == "linux" ] && [ -z "$TRAVIS_JOB_NAME" ]; then
    docker exec ccc myci-deb-install-build-deps.sh;
  fi
# Accept android SDK licenses and install android tools
- if [ "$TRAVIS_JOB_NAME" == "android" ]; then
    echo y | sdkmanager "ndk-bundle" &&
    echo y | sdkmanager "cmake;3.6.4111459";
  fi

  before_script:
- if [ "$TRAVIS_JOB_NAME" == "ios" ]; then
    curl -L https://github.com/zackslash/Xcode-Proj-Adder/raw/master/bin/XcodeProjAdder -O &&
    chmod +x XcodeProjAdder &&
    (cd xcode/$PACKAGE_NAME && ../../XcodeProjAdder -XCP $PACKAGE_NAME.xcodeproj -SCSV `echo $(find ../../src -type f -name *.cpp) | sed -E -e 's/ /,/g'`)
  fi

script:
- if [ "$TRAVIS_OS_NAME" == "linux" ] && [ -z "$TRAVIS_JOB_NAME" ]; then
    docker exec ccc dpkg-buildpackage -us -uc;
  fi
- if [ "$TRAVIS_JOB_NAME" == "macosx" ]; then
    make &&
    make test;
  fi
- if [ "$TRAVIS_JOB_NAME" == "ios" ]; then
    xcodebuild -workspace xcode/$PACKAGE_NAME.xcworkspace -scheme $PACKAGE_NAME CONFIGURATION_BUILD_DIR=../build -configuration Release &&
    myci-create-zip-package.sh -h src -f xcode/build/lib$PACKAGE_NAME.a///lib/ios -f LICENSE $PACKAGE_NAME-$PACKAGE_VERSION.zip;
  fi
- if [ "$TRAVIS_JOB_NAME" == "android" ]; then
    (cd android && ./gradlew build) &&
    myci-apply-version.sh -v $PACKAGE_VERSION android/*.pom.in &&
    myci-apply-version.sh -v $PACKAGE_VERSION android/*.aar.in --filename-only;
  fi


before_deploy:


deploy:
- provider: script
  skip_cleanup: true
  on:
    tags: true
    condition: $PACKAGE_TYPE = deb && -z "$TRAVIS_JOB_NAME"
  script: myci-deploy-debian-bintray.sh -u igagis -r $OS -p $PACKAGE_NAME -c main -d $OS_REL $TRAVIS_BUILD_DIR/../*.deb
- provider: script
  skip_cleanup: true
  script: myci-deploy-maven-bintray.sh -u igagis -r android -p io/github/igagis android/$PACKAGE_NAME-$PACKAGE_VERSION.aar
  on:
    tags: true
    condition: $TRAVIS_JOB_NAME = android
- provider: script
  skip_cleanup: true
  script: myci-deploy-homebrew.sh -t igagis/tap
  on:
    tags: true
    condition: $TRAVIS_JOB_NAME = macosx
- provider: script
  skip_cleanup: true
  script: rvm 2.3.3 do myci-deploy-cocoapods.sh -r igagis -v $PACKAGE_VERSION -u igagis -b cocoapods -p $PACKAGE_NAME-$PACKAGE_VERSION.zip cocoapods/$PACKAGE_NAME.podspec.in
  on:
    tags: true
    condition: $TRAVIS_JOB_NAME = ios
